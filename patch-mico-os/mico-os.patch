diff --git a/MiCO/system/easylink/system_easylink_softap.c b/MiCO/system/easylink/system_easylink_softap.c
index e48cfb0..c3b5428 100644
--- a/MiCO/system/easylink/system_easylink_softap.c
+++ b/MiCO/system/easylink/system_easylink_softap.c
@@ -92,9 +92,15 @@ restart:
 
     memset( &wNetConfig, 0, sizeof(network_InitTypeDef_st) );
     wNetConfig.wifi_mode = Soft_AP;
+#if 0
     snprintf( wNetConfig.wifi_ssid, 32, "EasyLink_%c%c%c%c%c%c",
               context->micoStatus.mac[9], context->micoStatus.mac[10], context->micoStatus.mac[12],
               context->micoStatus.mac[13], context->micoStatus.mac[15], context->micoStatus.mac[16] );
+#else
+    /* strcpy( wNetConfig.wifi_ssid, "Nobudutymanagers" ); */
+    strcpy( wNetConfig.wifi_ssid, "WINIX0123" );
+    
+#endif
     strcpy( (char*) wNetConfig.wifi_key, "" );
     strcpy( (char*) wNetConfig.local_ip_addr, "10.10.10.1" );
     strcpy( (char*) wNetConfig.net_mask, "255.255.255.0" );
@@ -205,10 +211,22 @@ OSStatus mico_easylink_softap( mico_Context_t * const in_context, mico_bool_t en
 
     if ( enable == MICO_TRUE ) {
         /* Start config server */
+#ifdef HL_USE_SKT_PAIRING
+        extern OSStatus smarthome_pairing_server_start( void );
+	extern void pairing_server_set_uap_cb( config_server_uap_configured_cb callback );
+
+        err = smarthome_pairing_server_start();
+
+        require_noerr( err, exit );
+
+        pairing_server_set_uap_cb( easylink_uap_configured_cd );
+#else
         err = config_server_start( );
+
         require_noerr( err, exit );
 
         config_server_set_uap_cb( easylink_uap_configured_cd );
+#endif
 
         err = mico_rtos_create_thread( &easylink_softap_thread_handler, MICO_APPLICATION_PRIORITY, "EASYLINK AP",
                                        easylink_softap_thread, 0x1000, (mico_thread_arg_t) in_context );
diff --git a/makefiles/Makefile b/makefiles/Makefile
index ae37b28..c372841 100644
--- a/makefiles/Makefile
+++ b/makefiles/Makefile
@@ -150,13 +150,13 @@ ifeq ($(SUB_BUILD),)
 	$(QUIET)$(ECHO) Making $@
 	$(QUIET)$(ECHO) set remotetimeout 20 > $@
 	$(QUIET)$(ECHO) $(GDBINIT_STRING) >> $@
-	
+
 .openocd_cfg: .gdbinit
 	$(QUIET)$(ECHO) Making $@
-	$(QUIET)$(ECHO) source [find $(OPENOCD_PATH)$(JTAG).cfg] > $@
-	$(QUIET)$(ECHO) source [find $(OPENOCD_PATH)$(HOST_OPENOCD).cfg] >> $@
-	$(QUIET)$(ECHO) source [find $(OPENOCD_PATH)$(HOST_OPENOCD)_gdb_jtag.cfg] >> $@
-	
+	$(QUIET)$(ECHO) source [find $(OPENOCD_CFG_PATH)interface/$(JTAG).cfg] > $@
+	$(QUIET)$(ECHO) source [find $(OPENOCD_CFG_PATH)$(HOST_OPENOCD)/$(HOST_OPENOCD).cfg] >> $@
+	$(QUIET)$(ECHO) source [find $(OPENOCD_CFG_PATH)$(HOST_OPENOCD)/$(HOST_OPENOCD)_gdb_jtag.cfg] >> $@
+
 endif
 
 ifneq ($(SFLASH),)
